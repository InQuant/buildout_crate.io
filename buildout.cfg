[buildout]
allow-picked-versions = false
extends = versions.cfg
download-cache = ${buildout:directory}/downloads
eggs-directory = ${buildout:directory}/eggs
versions = versions
extensions = mr.developer

find-links = http://dist.pinaxproject.com/dev/pinax-utils/pinax-utils-${versions:pinax-utils}.tar.gz

auto-checkout =
    crate.web
    crate.pypi
    jutils
    django-haystack

parts =
    postgresql
    configure-pgsql
    pgsql-symlinks
    elasticsearch
    elasticsearch-conf
    redis
    redis-conf
    supervisor
    django
    crate.io
    crate_symlink
    crate-base-conf
    crate-dev-base-conf
    celery-scripts

eggs =
    Babel
    Django
    Jinja2
    MarkupSafe
    Pillow
    PyYAML
    South
    amqplib
    anyjson
    bleach
    boto
    celery-haystack
    celery
    certifi
    chardet
    django-admin-tools
    django-appconf
    django-celery
    django-debug-toolbar
    django-devserver
    django-hosts
    django-jsonfield
    django-model-utils
    django-picklefield
    django-redis-cache
    django-secure
    django-social-auth
    django-staticfiles
    django-storages
    django-tastypie
    django-uuidfield
    docutils
    dozer
    eventlet
    greenlet
    gunicorn
    html5lib
    httplib2
    isoweek
    jingo
    kombu
    line_profiler
    lxml
    mimeparse
    newrelic
    oauth2
    oauthlib
    pinax-utils
    psycopg2
    py-bcrypt
    pyasn1
    python-dateutil
    python-openid
    pytz
    raven
    redis
    requests
    rsa
    simplejson
    slumber
    uuid
    crate.web
    crate.pypi
    django-haystack
    django-user-accounts
    pyelasticsearch
    saved_searches
    jutils
    flower

[revision-pins]
crate.io = 0f1535cfba33958fd75fe28a64555b9d3e0a63ce
crate.web = 84bcd290c7a6bd1db0ecc364b5d083af13615737
crate.pypi = 3b0d9389fc15d5cbaed10c36ed985761be8769f1
jutils = d901dce88a863646dc7f99ca18817bcb0a44f461
django-haystack = 2542426da5d75de458ec1c18f511648a328d62c6

[download-versions]
redis = 2.6.13
postgresql = 9.0.7
elasticsearch = 0.20.6

[crate.io]
recipe=zerokspot.recipe.git
repository=https://github.com/InQuant/crate.io.git
rev=${revision-pins:crate.io}

[domains]
# redis needs an ip to bind to
redis = 127.0.0.1
supervisor = 0.0.0.0
flower = 0.0.0.0
elasticsearch = 127.0.0.1

[ports]
redis = 6379
supervisor = 5010
flower = 5555
elasticsearch = 9200

[credentials]
supervisor_user = super
supervisor_pass = super

[sources]
crate.web = git https://github.com/crateio/crate.web.git rev=${revision-pins:crate.web} update=false
crate.pypi = git https://github.com/InQuant/crate.pypi.git rev=${revision-pins:crate.pypi} update=false
jutils = git https://github.com/dstufft/jutils.git rev=${revision-pins:jutils} update=false
django-haystack = git https://github.com/toastdriven/django-haystack.git rev=${revision-pins:django-haystack} update=false

[urls]
redis = https://redis.googlecode.com/files/redis-${download-versions:redis}.tar.gz
postgresql = http://ftp.postgresql.org/pub/source/v${download-versions:postgresql}/postgresql-${download-versions:postgresql}.tar.gz
elasticsearch = https://download.elasticsearch.org/elasticsearch/elasticsearch/elasticsearch-${download-versions:elasticsearch}.tar.gz

[postgresql]
recipe = zc.recipe.cmmi
url = ${urls:postgresql}
extra_options =
  --with-readline
  --enable-thread-safety

[configure-pgsql]
recipe = collective.recipe.cmd
on_install = true
on_update = false
cmds =
    ${postgresql:location}/bin/initdb -D ${postgresql:location}/var/data -E UNICODE
    ${postgresql:location}/bin/pg_ctl -D ${postgresql:location}/var/data start
    sleep 30
    ${postgresql:location}/bin/createdb -E UTF8 crate
    ${postgresql:location}/bin/pg_ctl -D ${postgresql:location}/var/data stop

[pgsql-symlinks]
recipe = cns.recipe.symlink
symlink_target = ${buildout:directory}/bin
symlink_base = ${postgresql:location}/bin
symlink =
    pg_ctl
    postgres
    psql

[elasticsearch]
recipe = hexagonit.recipe.download
url = ${urls:elasticsearch}
destination = ${buildout:parts-directory}/elasticsearch
strip-top-level-dir = true
hash-name = false
ignore-existing = true

[elasticsearch-conf]
recipe = collective.recipe.template
input = ${buildout:directory}/templates/elasticsearch.yml.in
output = ${buildout:parts-directory}/elasticsearch/config/elasticsearch.yml

[redis]
# The redis package is weird in that you only run make.
# There is no configure and make install will _always_ install it to
# usr/bin or such. Hence, the trickery with this and move_redis
recipe = hexagonit.recipe.cmmi
url = ${urls:redis}
configure-command = echo No configure for redis
make-options =
   PREFIX=${buildout:directory}

[redis-conf]
recipe = collective.recipe.template
input = ${buildout:directory}/templates/redis.conf.in
output = ${buildout:directory}/etc/redis.conf

[supervisor]
recipe = collective.recipe.supervisor
port = ${domains:supervisor}:${ports:supervisor}
user = ${credentials:supervisor_user}
password = ${credentials:supervisor_pass}
programs =
    0 redis (stdout_logfile=${buildout:directory}/var/log/redis.log) ${buildout:directory}/bin/redis-server [${buildout:directory}/etc/redis.conf] true
    10 elasticsearch (stdout_logfile=${buildout:directory}/var/log/elasticsearch.log) ${buildout:directory}/parts/elasticsearch/bin/elasticsearch [-f] true
    20 postgres (stdout_logfile=${buildout:directory}/var/log/postgres.log) ${buildout:directory}/bin/postgres [-D ${buildout:directory}/parts/postgresql/var/data] true
    30 flower (stdout_logfile=${buildout:directory}/var/log/flower.log) ${buildout:directory}/bin/flower [--address=${domains:flower} --port=${ports:flower} --broker=redis://${domains:redis}:${ports:redis}/0] true

[django]
recipe = djangorecipe
control-script = manage.py
project = django
eggs = ${buildout:eggs}
initialization =
    import os
    os.environ['DJANGO_SETTINGS_MODULE'] = 'crateweb.conf.dev.base'

[crate_symlink]
recipe = cns.recipe.symlink
symlink_target = ${buildout:directory}
symlink_base = ${buildout:directory}/parts/crate.io
symlink =
    cmds
    crateweb
    locale

[crate-base-conf]
recipe = collective.recipe.template
input = ${buildout:directory}/templates/conf.base.in
output = ${buildout:directory}/crateweb/conf/base.py

[crate-dev-base-conf]
recipe = collective.recipe.template
input = ${buildout:directory}/templates/conf.dev.base.in
output = ${buildout:directory}/crateweb/conf/dev/base.py

[celery-scripts]
recipe = zc.recipe.egg
eggs = ${buildout:eggs}
scripts = flower
